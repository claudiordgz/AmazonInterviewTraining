"""
    Is Unique
    Implement an algorithm o determine if a string has all unique characters.
    What if you cannot use additional data structures?
"""


def is_unique(word):
    # if no data structures then sort and count
    return len(word) == len(set(word.lower()))


def test_is_uniqure():
    assert is_unique('abcdefghi')
    assert not is_unique('okoto')
    assert not is_unique('alma matter calibre')
    assert not is_unique('to the memory of the victims')
    assert is_unique('UNCOPYRIGHTABLE')
    assert is_unique('SUBDERMATOGLYPHIC')
    assert not is_unique('epE')
    assert is_unique('subdermatoglyphic')
    assert is_unique('uncopyrightables')
    assert is_unique('dermatoglyphics')
    assert is_unique('hydropneumatics')
    assert is_unique('misconjugatedly')
    assert is_unique('uncopyrightable')
    assert is_unique('ambidextrously')
    assert is_unique('computerizably')
    assert is_unique('croquetplaying')
    assert is_unique('dermatoglyphic')
    assert is_unique('hydromagnetics')
    assert is_unique('hydropneumatic')
    assert is_unique('pseudomythical')
    assert is_unique('subformatively')
    assert is_unique('troublemakings')
    assert is_unique('undiscoverably')
    assert is_unique('consumptively')
    assert is_unique('copyrightable')
    assert is_unique('documentarily')
    assert is_unique('draughtswomen')
    assert is_unique('endolymphatic')
    assert is_unique('flamethrowing')
    assert is_unique('flowchartings')
    assert is_unique('hydromagnetic')
    assert is_unique('lycanthropies')
    assert is_unique('metalworkings')
    assert is_unique('misconjugated')
    assert is_unique('multibranched')
    assert is_unique('subordinately')
    assert is_unique('troublemaking')
    assert is_unique('uncopyrighted')
    assert is_unique('unmaledictory')
    assert is_unique('unpredictably')
    assert is_unique('unproblematic')
    assert is_unique('unsympathized')
    assert is_unique('adsorptively')
    assert is_unique('ambidextrous')
    assert is_unique('amblygonites')
    assert is_unique('amylopectins')
    assert is_unique('bankruptcies')
    assert is_unique('blastodermic')
    assert is_unique('bluestocking')
    assert is_unique('cabinetworks')
    assert is_unique('centrifugals')
    assert is_unique('computerniks')
    assert is_unique('configurated')
    assert is_unique('considerably')
    assert is_unique('counterplays')
    assert is_unique('countervails')
    assert is_unique('customizable')
    assert is_unique('demographics')
    assert is_unique('demonstrably')
    assert is_unique('discountable')
    assert is_unique('discrepantly')
    assert is_unique('disreputably')
    assert is_unique('doublethinks')
    assert is_unique('drumbeatings')
    assert is_unique('earthmovings')
    assert is_unique('edulcorating')
    assert is_unique('euchromatins')
    assert is_unique('exclusionary')
    assert is_unique('exculpations')
    assert is_unique('expurgations')
    assert is_unique('exhaustingly')
    assert is_unique('farsightedly')
    assert is_unique('flexographic')
    assert is_unique('flowcharting')
    assert is_unique('Francophiles')
    assert is_unique('gourmandizes')
    assert is_unique('granulocytes')
    assert is_unique('hematoxylins')
    assert is_unique('housewarming')
    assert is_unique('hydromancies')
    assert is_unique('hypnotizable')
    assert is_unique('imponderably')
    assert is_unique('incomputable')
    assert is_unique('incomputably')
    assert is_unique('kymographies')
    assert is_unique('lexicography')
    assert is_unique('Lubavitchers')
    assert is_unique('lycanthropes')
    assert is_unique('malnourished')
    assert is_unique('mendaciously')
    assert is_unique('metalworking')
    assert is_unique('multipronged')
    assert is_unique('nightwalkers')
    assert is_unique('outpreaching')
    assert is_unique('outsparkling')
    assert is_unique('outspreading')
    assert is_unique('overhaulings')
    assert is_unique('overmatching')
    assert is_unique('packinghouse')
    assert is_unique('pelargoniums')
    assert is_unique('phagocytized')
    assert is_unique('phagocytizes')
    assert is_unique('phytoalexins')
    assert is_unique('polycentrism')
    assert is_unique('postcardlike')
    assert is_unique('problematics')
    assert is_unique('productively')
    assert is_unique('questionably')
    assert is_unique('recognizably')
    assert is_unique('stakeholding')
    assert is_unique('stenographic')
    assert is_unique('stickhandler')
    assert is_unique('subnormality')
    assert is_unique('subvocalized')
    assert is_unique('thunderclaps')
    assert is_unique('unforgivable')
    assert is_unique('unglamorized')
    assert is_unique('unhysterical')
    assert is_unique('unprofitable')
    assert is_unique('unprofitably')
    assert is_unique('upholstering')
    assert is_unique('voluntaryism')
    assert is_unique('xylographies')
    assert is_unique('abolishment')
    assert is_unique('atmospheric')
    assert is_unique('backgrounds')
    assert is_unique('birthplaces')
    assert is_unique('campgrounds')
    assert is_unique('complainers')
    assert is_unique('copyrighted')
    assert is_unique('countryside')
    assert is_unique('dangerously')
    assert is_unique('designatory')
    assert is_unique('disgraceful')
    assert is_unique('disturbance')
    assert is_unique('documentary')
    assert is_unique('earthmoving')
    assert is_unique('embracingly')
    assert is_unique('facetiously')
    assert is_unique('filmography')
    assert is_unique('fluoridates')
    assert is_unique('foremanship')
    assert is_unique('geophysical')
    assert is_unique('imprudently')
    assert is_unique('importances')
    assert is_unique('journalized')
    assert is_unique('juxtaposing')
    assert is_unique('keyboarding')
    assert is_unique('lumberjacks')
    assert is_unique('misanthrope')
    assert is_unique('misanthropy')
    assert is_unique('nefariously')
    assert is_unique('overstaying')
    assert is_unique('palindromes')
    assert is_unique('percolating')
    assert is_unique('personality')
    assert is_unique('playgrounds')
    assert is_unique('playwrights')
    assert is_unique('precautions')
    assert is_unique('predictably')
    assert is_unique('problematic')
    assert is_unique('quaveringly')
    assert is_unique('regulations')
    assert is_unique('republicans')
    assert is_unique('secondarily')
    assert is_unique('spaceflight')
    assert is_unique('speculation')
    assert is_unique('stenography')
    assert is_unique('subcategory')
    assert is_unique('Switzerland')
    assert is_unique('thunderclap')
    assert is_unique('trampolines')
    assert is_unique('undesirably')
    assert is_unique('unpolarized')
    assert is_unique('vibraphones')
    assert is_unique('vouchsafing')
    assert is_unique('warehousing')
    assert is_unique('workmanship')
    assert is_unique('xylographic')
    assert is_unique('aftershock')
    assert is_unique('artichokes')
    assert is_unique('authorizes')
    assert is_unique('background')
    assert is_unique('bankruptcy')
    assert is_unique('binoculars')
    assert is_unique('blackhorse')
    assert is_unique('blacksmith')
    assert is_unique('boyfriends')
    assert is_unique('campground')
    assert is_unique('clothespin')
    assert is_unique('complaints')
    assert is_unique('conjugated')
    assert is_unique('copyrights')
    assert is_unique('despicably')
    assert is_unique('destroying')
    assert is_unique('downstream')
    assert is_unique('dumbwaiter')
    assert is_unique('duplicates')
    assert is_unique('farsighted')
    assert is_unique('formidable')
    assert is_unique('godparents')
    assert is_unique('graciously')
    assert is_unique('greyhounds')
    assert is_unique('hospitable')
    assert is_unique('importance')
    assert is_unique('infamously')
    assert is_unique('introduces')
    assert is_unique('judgmental')
    assert is_unique('juxtaposed')
    assert is_unique('lawrencium')
    assert is_unique('lumberjack')
    assert is_unique('malnourish')
    assert is_unique('mistakenly')
    assert is_unique('monarchist')
    assert is_unique('nightmares')
    assert is_unique('noticeably')
    assert is_unique('pathfinder')
    assert is_unique('phlegmatic')
    assert is_unique('quadriceps')
    assert is_unique('Scunthorpe')
    assert is_unique('shockingly')
    assert is_unique('slumbering')
    assert is_unique('trampoline')
    assert is_unique('trapezoids')
    assert is_unique('Volkswagen')
    assert is_unique('waveringly')
